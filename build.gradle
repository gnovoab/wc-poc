plugins {
	id 'org.springframework.boot' version '2.3.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'checkstyle'
	id 'pmd'
	id 'jacoco'
	id "org.sonarqube" version "2.8"
	id "com.github.spotbugs" version "4.3.0"
}

repositories {
	mavenCentral()
}

//Settings
bootJar {
	archiveFileName = 'wc-poc.jar'
}

group = 'wc.quiniela'
sourceCompatibility = JavaVersion.VERSION_14
targetCompatibility = JavaVersion.VERSION_14

//dependencyManagement {
//	imports {
//		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Hoxton.RELEASE"
//	}
//}


test {
	useJUnitPlatform()
}

checkstyle {
	configFile = file('codequality/checkstyle/checkstyle.xml')
}
tasks.withType(Checkstyle) {
	reports {
		xml.enabled false
		html.enabled true
	}
}


jacoco {
	reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.enabled = true
		html.destination file("${buildDir}/jacocoHtml")
	}
}


// configure HTML report
spotbugsMain {
	reports {
		html {
			enabled = true
			stylesheet = 'fancy-hist.xsl'
		}
	}
}

spotbugsTest {
	reports {
		html {
			enabled = true
			stylesheet = 'fancy-hist.xsl'
		}
	}
}




dependencies {

	//Eureka & Config & Actuator
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
//	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	//Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//Valdiation
	implementation 'org.springframework.boot:spring-boot-starter-validation'



	//Swagger
	implementation "io.springfox:springfox-swagger2:2.9.2"
	implementation "io.springfox:springfox-swagger-ui:2.9.2"

	//JDBC
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//DB
	implementation 'org.flywaydb:flyway-core'
	runtimeOnly 'org.postgresql:postgresql'

	//Test
	testImplementation('org.springframework.boot:spring-boot-starter-test')

}

test {
	useJUnitPlatform()
}
